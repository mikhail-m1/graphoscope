"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcreate_wasm_app"] = self["webpackChunkcreate_wasm_app"] || []).push([["index_js"],{

/***/ "../binding/pkg/binding_bg.js":
/*!************************************!*\
  !*** ../binding/pkg/binding_bg.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Graph\": () => (/* binding */ Graph),\n/* harmony export */   \"__wbg_graph_new\": () => (/* binding */ __wbg_graph_new),\n/* harmony export */   \"__wbindgen_number_new\": () => (/* binding */ __wbindgen_number_new),\n/* harmony export */   \"__wbindgen_string_get\": () => (/* binding */ __wbindgen_string_get),\n/* harmony export */   \"__wbindgen_string_new\": () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   \"__wbindgen_throw\": () => (/* binding */ __wbindgen_throw),\n/* harmony export */   \"main_js\": () => (/* binding */ main_js),\n/* harmony export */   \"parse\": () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binding_bg.wasm */ \"../binding/pkg/binding_bg.wasm\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(_binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nfunction main_js() {\n    _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.main_js();\n}\n\n/**\n* @param {any} dot\n* @returns {any}\n*/\nfunction parse(dot) {\n    try {\n        var ret = _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.parse(addBorrowedObject(dot));\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n*/\nclass Graph {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Graph.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_graph_free(ptr);\n    }\n    /**\n    * @param {any} dot\n    * @returns {Graph}\n    */\n    static new(dot) {\n        try {\n            var ret = _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.graph_new(addBorrowedObject(dot));\n            return Graph.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    node_count() {\n        var ret = _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.graph_node_count(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {any}\n    */\n    render() {\n        var ret = _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.graph_render(this.ptr);\n        return takeObject(ret);\n    }\n}\n\nfunction __wbindgen_string_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _binding_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nfunction __wbindgen_number_new(arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbg_graph_new(arg0) {\n    var ret = Graph.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack://create-wasm-app/../binding/pkg/binding_bg.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _binding_pkg_binding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binding/pkg/binding.js */ \"../binding/pkg/binding_bg.js\");\n\n\nconst inputElement = document.getElementById(\"browse\");\ninputElement.addEventListener(\"change\", handleFiles, false);\n\nvar context = undefined;\n\nfunction handleFiles() {\n    //console.log(this.files); /* now you can work with the file list */\n    const reader = new FileReader();\n    reader.onload = (function (x) {\n        // console.log(x.target.result);\n        document.getElementById(\"input\").value = x.target.result;\n        context = _binding_pkg_binding_js__WEBPACK_IMPORTED_MODULE_0__.parse(x.target.result);\n        // console.log(context.node_count())\n        document.getElementById(\"output\").innerHTML = context.render();\n    });\n    reader.readAsText(this.files[0]);\n}\n\ndocument.getElementById(\"update\").onclick = (function () {\n    context = _binding_pkg_binding_js__WEBPACK_IMPORTED_MODULE_0__.parse(document.getElementById(\"input\").value);\n    document.getElementById(\"output\").innerHTML = context.render();\n})\n\ndocument.getElementById(\"input\").addEventListener('keydown', function (e) {\n    if (e.code == \"Enter\" && (e.ctrlKey || e.metaKey)) {\n        document.getElementById(\"update\").click()\n    }\n});\n\n//# sourceURL=webpack://create-wasm-app/./index.js?");

/***/ }),

/***/ "../binding/pkg/binding_bg.wasm":
/*!**************************************!*\
  !*** ../binding/pkg/binding_bg.wasm ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.id];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name) exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./binding_bg.js */ \"../binding/pkg/binding_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"\"]()\n\n//# sourceURL=webpack://create-wasm-app/../binding/pkg/binding_bg.wasm?");

/***/ })

}]);